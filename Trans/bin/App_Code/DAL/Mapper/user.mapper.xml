<?xml version="1.0" encoding="utf-8" ?>
<!--============================================================================
//	CAUTION: This file is generated by IBatisNetGen.BatisMap.cst at 2014/12/21 23:03:49
//				Any manual editing will be lost in re-generation.
//===========================================================================-->
<sqlMap namespace="Trans"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="Users" type="Trans.DAL.Entity.Users" />
    <typeAlias alias="UserRoleEntity" type="Trans.DAL.Entity.UserRole"/>
  </alias>

  <resultMaps>
    <resultMap id="FullResultMap" class="Users">
      <result property="Id" column="id" dbType="BigInt"/>
      <result property="Loginname" column="loginname" dbType="NVarChar"/>
      <result property="Username" column="username" dbType="NVarChar"/>
      <result property="Password" column="password" dbType="NVarChar"/>
      <result property="Roleid" column="roleid" dbType="BigInt"/>
      <result property="Note" column="note" dbType="Text"/>
      <result property="Active" column="active" dbType="TinyInt"/>
    </resultMap>
    <resultMap id="NonLobResultMap" class="Users">
      <result property="Id" column="id" dbType="BigInt"/>
      <result property="Loginname" column="loginname" dbType="NVarChar"/>
      <result property="Username" column="username" dbType="NVarChar"/>
      <result property="Password" column="password" dbType="NVarChar"/>
      <result property="Roleid" column="roleid" dbType="BigInt"/>
      <result property="Active" column="active" dbType="TinyInt"/>
    </resultMap>
    <resultMap id="UserRoleResultMap" class="UserRoleEntity">
      <result property="UserId" column="userId" dbType="BigInt"/>
      <result property="RoleId" column="roleId" dbType="BigInt"/>
      <result property="LoginName" column="loginname" dbType="NVarChar"/>
      <result property="UserName" column="username" dbType="NVarChar"/>
      <result property="RoleName" column="rolename" dbType="NVarChar"/>
    </resultMap>
  </resultMaps>

  <statements>

    <select id="User.GetCount" resultClass="System.Int32">
      SELECT count(*) FROM users
    </select>

    <select id="Users.FindAll" resultMap="FullResultMap">
      SELECT *
      FROM users
    </select>
    <select id="Users.QuickFindAll" resultMap="NonLobResultMap">
      SELECT
      [users].[id]
      , [users].[loginname]
      , [users].[username]
      , [users].[password]
      , [users].[roleid]
      , [users].[active]
      FROM users
    </select>
    <select id="UsersRole.FindAll" resultMap="UserRoleResultMap">
      select [dbo].[users].[id] as userId,[role].id as roleId, loginname,username,[role].rolename  from users with (nolock)
      join [dbo].[role] with (nolock) ON [role].[id] = [users].[roleid]      
    </select>
    <select id="Users.Find" parameterClass="Users" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE
      ([users].[id] = #Id#)
    </select>
    <select id="Users.QuickFind" parameterClass="Users" resultMap="NonLobResultMap" extends="Users.QuickFindAll">
      WHERE
      ([users].[id] = #Id#)
    </select>

    <select id="Users.FindByLoginname" parameterClass="String" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE ([users].[loginname] = #value#)
    </select>
    <select id="Users.QuickFindByLoginname" parameterClass="String" resultMap="NonLobResultMap" extends="Users.QuickFindAll">
      WHERE ([users].[loginname] = #value#)
    </select>
    <select id="Users.FindByUsername" parameterClass="String" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE ([users].[username] = #value#)
    </select>
    <select id="Users.QuickFindByUsername" parameterClass="String" resultMap="NonLobResultMap" extends="Users.QuickFindAll">
      WHERE ([users].[username] = #value#)
    </select>
    <select id="Users.FindByPassword" parameterClass="String" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE ([users].[password] = #value#)
    </select>
    <select id="Users.QuickFindByPassword" parameterClass="String" resultMap="NonLobResultMap" extends="Users.QuickFindAll">
      WHERE ([users].[password] = #value#)
    </select>
    <select id="Users.FindByRoleid" parameterClass="Int64" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE ([users].[roleid] = #value#)
    </select>
    <select id="Users.QuickFindByRoleid" parameterClass="Int64" resultMap="NonLobResultMap" extends="Users.QuickFindAll">
      WHERE ([users].[roleid] = #value#)
    </select>
    <select id="Users.FindByActive" parameterClass="Byte" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE ([users].[active] = #value#)
    </select>
    <select id="Users.QuickFindByActive" parameterClass="Byte" resultMap="NonLobResultMap" extends="Users.QuickFindAll">
      WHERE ([users].[active] = #value#)
    </select>

    <insert id="Users.Insert" parameterClass="Users">
      INSERT INTO [dbo].[users] (
      [id]
      , [loginname]
      , [username]
      , [password]
      , [roleid]
      , [note]
      , [active]
      ) VALUES (
      #Id#
      , #Loginname#
      , #Username#
      , #Password#
      , #Roleid#
      , #Note#
      , #Active#
      )
    </insert>

    <update id="Users.Update" parameterClass="Users">
      UPDATE [dbo].[users] SET
      [loginname] = #Loginname#
      , [username] = #Username#
      , [password] = #Password#
      , [roleid] = #Roleid#
      , [note] = #Note#
      , [active] = #Active#
      WHERE
      ([id] = #Id#)
    </update>

    <delete id="Users.Delete" parameterClass="Users">
      DELETE FROM [dbo].[users]
      WHERE
      ([id] = #Id#)
    </delete>

    <delete id="Users.DeleteByLoginname" parameterClass="String">
      DELETE FROM [dbo].[users] WHERE ([loginname] = #value#)
    </delete>
    <delete id="Users.DeleteByUsername" parameterClass="String">
      DELETE FROM [dbo].[users] WHERE ([username] = #value#)
    </delete>
    <delete id="Users.DeleteByPassword" parameterClass="String">
      DELETE FROM [dbo].[users] WHERE ([password] = #value#)
    </delete>
    <delete id="Users.DeleteByRoleid" parameterClass="Int64">
      DELETE FROM [dbo].[users] WHERE ([roleid] = #value#)
    </delete>
    <delete id="Users.DeleteByActive" parameterClass="Byte">
      DELETE FROM [dbo].[users] WHERE ([active] = #value#)
    </delete>

    <select id="Users.Reload" parameterClass="Users" resultMap="FullResultMap" extends="Users.FindAll">
      WHERE ([users].[id] = #Id#)
    </select>
  </statements>
</sqlMap>
